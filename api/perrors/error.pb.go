// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: perrors/error.proto

package perrors

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端错误
type ClientReason int32

const (
	ClientReason_CLIENT_UNKNOWN        ClientReason = 0 // 客户端未知错误
	ClientReason_CLIENT_NOT_FOUND      ClientReason = 1 // 客户端不存在
	ClientReason_CLIENT_ALREADY_EXISTS ClientReason = 2 // 客户端已存在
)

// Enum value maps for ClientReason.
var (
	ClientReason_name = map[int32]string{
		0: "CLIENT_UNKNOWN",
		1: "CLIENT_NOT_FOUND",
		2: "CLIENT_ALREADY_EXISTS",
	}
	ClientReason_value = map[string]int32{
		"CLIENT_UNKNOWN":        0,
		"CLIENT_NOT_FOUND":      1,
		"CLIENT_ALREADY_EXISTS": 2,
	}
)

func (x ClientReason) Enum() *ClientReason {
	p := new(ClientReason)
	*p = x
	return p
}

func (x ClientReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientReason) Descriptor() protoreflect.EnumDescriptor {
	return file_perrors_error_proto_enumTypes[0].Descriptor()
}

func (ClientReason) Type() protoreflect.EnumType {
	return &file_perrors_error_proto_enumTypes[0]
}

func (x ClientReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientReason.Descriptor instead.
func (ClientReason) EnumDescriptor() ([]byte, []int) {
	return file_perrors_error_proto_rawDescGZIP(), []int{0}
}

// 服务端错误
type ServerReason int32

const (
	ServerReason_SERVER_UNKNOWN        ServerReason = 0 // 服务端未知错误
	ServerReason_SERVER_DATA_NOT_FOUND ServerReason = 1 // 数据不存在
	ServerReason_SERVER_DATABASE_ERROR ServerReason = 2 // 数据库错误
	// GRPC错误
	ServerReason_SERVER_GRPC_ERROR ServerReason = 3
	// HTTP错误
	ServerReason_SERVER_HTTP_ERROR ServerReason = 4
)

// Enum value maps for ServerReason.
var (
	ServerReason_name = map[int32]string{
		0: "SERVER_UNKNOWN",
		1: "SERVER_DATA_NOT_FOUND",
		2: "SERVER_DATABASE_ERROR",
		3: "SERVER_GRPC_ERROR",
		4: "SERVER_HTTP_ERROR",
	}
	ServerReason_value = map[string]int32{
		"SERVER_UNKNOWN":        0,
		"SERVER_DATA_NOT_FOUND": 1,
		"SERVER_DATABASE_ERROR": 2,
		"SERVER_GRPC_ERROR":     3,
		"SERVER_HTTP_ERROR":     4,
	}
)

func (x ServerReason) Enum() *ServerReason {
	p := new(ServerReason)
	*p = x
	return p
}

func (x ServerReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerReason) Descriptor() protoreflect.EnumDescriptor {
	return file_perrors_error_proto_enumTypes[1].Descriptor()
}

func (ServerReason) Type() protoreflect.EnumType {
	return &file_perrors_error_proto_enumTypes[1]
}

func (x ServerReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerReason.Descriptor instead.
func (ServerReason) EnumDescriptor() ([]byte, []int) {
	return file_perrors_error_proto_rawDescGZIP(), []int{1}
}

// 逻辑错误
type LogicReason int32

const (
	LogicReason_LOGIC_UNKNOWN LogicReason = 0 // 逻辑未知错误
	// 未配置strategyPath
	LogicReason_LOGIC_STRATEGY_PATH_NOT_CONFIGURED LogicReason = 1
	// 未授权路径
	LogicReason_LOGIC_UNAUTHORIZED_PATH LogicReason = 2
	// 创建prometheus-group失败
	LogicReason_LOGIC_CREATE_PROMETHEUS_GROUP_FAILED LogicReason = 3
	// 编辑prometheus-group失败
	LogicReason_LOGIC_EDIT_PROMETHEUS_GROUP_FAILED LogicReason = 4
	// 删除prometheus-group失败
	LogicReason_LOGIC_DELETE_PROMETHEUS_GROUP_FAILED LogicReason = 5
	// 创建prometheus-strategy失败
	LogicReason_LOGIC_CREATE_PROMETHEUS_STRATEGY_FAILED LogicReason = 6
	// 编辑prometheus-strategy失败
	LogicReason_LOGIC_EDIT_PROMETHEUS_STRATEGY_FAILED LogicReason = 7
	// 删除prometheus-strategy失败
	LogicReason_LOGIC_DELETE_PROMETHEUS_STRATEGY_FAILED LogicReason = 8
	// 数据不存在
	LogicReason_LOGIC_DATA_NOT_FOUND LogicReason = 9
	// 数据重复
	LogicReason_LOGIC_DATA_DUPLICATE LogicReason = 10
	// 创建alart-page失败
	LogicReason_LOGIC_CREATE_ALERT_PAGE_FAILED LogicReason = 11
	// 编辑alart-page失败
	LogicReason_LOGIC_EDIT_ALERT_PAGE_FAILED LogicReason = 12
	// 删除alart-page失败
	LogicReason_LOGIC_DELETE_ALERT_PAGE_FAILED LogicReason = 13
	// 创建dict失败
	LogicReason_LOGIC_CREATE_DICT_FAILED LogicReason = 14
	// 编辑dict失败
	LogicReason_LOGIC_EDIT_DICT_FAILED LogicReason = 15
	// 删除dict失败
	LogicReason_LOGIC_DELETE_DICT_FAILED LogicReason = 16
)

// Enum value maps for LogicReason.
var (
	LogicReason_name = map[int32]string{
		0:  "LOGIC_UNKNOWN",
		1:  "LOGIC_STRATEGY_PATH_NOT_CONFIGURED",
		2:  "LOGIC_UNAUTHORIZED_PATH",
		3:  "LOGIC_CREATE_PROMETHEUS_GROUP_FAILED",
		4:  "LOGIC_EDIT_PROMETHEUS_GROUP_FAILED",
		5:  "LOGIC_DELETE_PROMETHEUS_GROUP_FAILED",
		6:  "LOGIC_CREATE_PROMETHEUS_STRATEGY_FAILED",
		7:  "LOGIC_EDIT_PROMETHEUS_STRATEGY_FAILED",
		8:  "LOGIC_DELETE_PROMETHEUS_STRATEGY_FAILED",
		9:  "LOGIC_DATA_NOT_FOUND",
		10: "LOGIC_DATA_DUPLICATE",
		11: "LOGIC_CREATE_ALERT_PAGE_FAILED",
		12: "LOGIC_EDIT_ALERT_PAGE_FAILED",
		13: "LOGIC_DELETE_ALERT_PAGE_FAILED",
		14: "LOGIC_CREATE_DICT_FAILED",
		15: "LOGIC_EDIT_DICT_FAILED",
		16: "LOGIC_DELETE_DICT_FAILED",
	}
	LogicReason_value = map[string]int32{
		"LOGIC_UNKNOWN":                           0,
		"LOGIC_STRATEGY_PATH_NOT_CONFIGURED":      1,
		"LOGIC_UNAUTHORIZED_PATH":                 2,
		"LOGIC_CREATE_PROMETHEUS_GROUP_FAILED":    3,
		"LOGIC_EDIT_PROMETHEUS_GROUP_FAILED":      4,
		"LOGIC_DELETE_PROMETHEUS_GROUP_FAILED":    5,
		"LOGIC_CREATE_PROMETHEUS_STRATEGY_FAILED": 6,
		"LOGIC_EDIT_PROMETHEUS_STRATEGY_FAILED":   7,
		"LOGIC_DELETE_PROMETHEUS_STRATEGY_FAILED": 8,
		"LOGIC_DATA_NOT_FOUND":                    9,
		"LOGIC_DATA_DUPLICATE":                    10,
		"LOGIC_CREATE_ALERT_PAGE_FAILED":          11,
		"LOGIC_EDIT_ALERT_PAGE_FAILED":            12,
		"LOGIC_DELETE_ALERT_PAGE_FAILED":          13,
		"LOGIC_CREATE_DICT_FAILED":                14,
		"LOGIC_EDIT_DICT_FAILED":                  15,
		"LOGIC_DELETE_DICT_FAILED":                16,
	}
)

func (x LogicReason) Enum() *LogicReason {
	p := new(LogicReason)
	*p = x
	return p
}

func (x LogicReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicReason) Descriptor() protoreflect.EnumDescriptor {
	return file_perrors_error_proto_enumTypes[2].Descriptor()
}

func (LogicReason) Type() protoreflect.EnumType {
	return &file_perrors_error_proto_enumTypes[2]
}

func (x LogicReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicReason.Descriptor instead.
func (LogicReason) EnumDescriptor() ([]byte, []int) {
	return file_perrors_error_proto_rawDescGZIP(), []int{2}
}

var File_perrors_error_proto protoreflect.FileDescriptor

var file_perrors_error_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x6b, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x0e, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0x91,
	0x03, 0x12, 0x1a, 0x0a, 0x10, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45, 0x92, 0x03, 0x12, 0x1f, 0x0a,
	0x15, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0x45, 0x93, 0x03, 0x1a, 0x04,
	0xa0, 0x45, 0x90, 0x03, 0x2a, 0xaa, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x0e, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0xf5, 0x03, 0x12,
	0x1f, 0x0a, 0x15, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45, 0xf6, 0x03,
	0x12, 0x1f, 0x0a, 0x15, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x42,
	0x41, 0x53, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0x45, 0xf7,
	0x03, 0x12, 0x1b, 0x0a, 0x11, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x50, 0x43,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0x04, 0xa8, 0x45, 0xf8, 0x03, 0x12, 0x1b,
	0x0a, 0x11, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x04, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03, 0x1a, 0x04, 0xa0, 0x45, 0xf4,
	0x03, 0x2a, 0xc8, 0x05, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x0d, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x2c, 0x0a, 0x22, 0x4c, 0x4f,
	0x47, 0x49, 0x43, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x50, 0x41, 0x54,
	0x48, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44,
	0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x21, 0x0a, 0x17, 0x4c, 0x4f, 0x47, 0x49,
	0x43, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x50,
	0x41, 0x54, 0x48, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x2e, 0x0a, 0x24, 0x4c,
	0x4f, 0x47, 0x49, 0x43, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4d,
	0x45, 0x54, 0x48, 0x45, 0x55, 0x53, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x2c, 0x0a, 0x22, 0x4c,
	0x4f, 0x47, 0x49, 0x43, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54,
	0x48, 0x45, 0x55, 0x53, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x2e, 0x0a, 0x24, 0x4c, 0x4f, 0x47,
	0x49, 0x43, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54,
	0x48, 0x45, 0x55, 0x53, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x05, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x31, 0x0a, 0x27, 0x4c, 0x4f, 0x47,
	0x49, 0x43, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x45, 0x54,
	0x48, 0x45, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x2f, 0x0a, 0x25,
	0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x45,
	0x54, 0x48, 0x45, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x31, 0x0a,
	0x27, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x50, 0x52,
	0x4f, 0x4d, 0x45, 0x54, 0x48, 0x45, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47,
	0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01,
	0x12, 0x1e, 0x0a, 0x14, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x09, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01,
	0x12, 0x1e, 0x0a, 0x14, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x44,
	0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x0a, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01,
	0x12, 0x28, 0x0a, 0x1e, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x0b, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x26, 0x0a, 0x1c, 0x4c, 0x4f,
	0x47, 0x49, 0x43, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x50,
	0x41, 0x47, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0c, 0x1a, 0x04, 0xa8, 0x45,
	0xc8, 0x01, 0x12, 0x28, 0x0a, 0x1e, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x0d, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x12, 0x22, 0x0a, 0x18,
	0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x43,
	0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0e, 0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01,
	0x12, 0x20, 0x0a, 0x16, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x44,
	0x49, 0x43, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0f, 0x1a, 0x04, 0xa8, 0x45,
	0xc8, 0x01, 0x12, 0x22, 0x0a, 0x18, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x44, 0x49, 0x43, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x10,
	0x1a, 0x04, 0xa8, 0x45, 0xc8, 0x01, 0x1a, 0x04, 0xa0, 0x45, 0xc8, 0x01, 0x42, 0x37, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x50, 0x01, 0x5a, 0x26, 0x70,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x3b, 0x70, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_perrors_error_proto_rawDescOnce sync.Once
	file_perrors_error_proto_rawDescData = file_perrors_error_proto_rawDesc
)

func file_perrors_error_proto_rawDescGZIP() []byte {
	file_perrors_error_proto_rawDescOnce.Do(func() {
		file_perrors_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_perrors_error_proto_rawDescData)
	})
	return file_perrors_error_proto_rawDescData
}

var file_perrors_error_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_perrors_error_proto_goTypes = []interface{}{
	(ClientReason)(0), // 0: api.perrors.ClientReason
	(ServerReason)(0), // 1: api.perrors.ServerReason
	(LogicReason)(0),  // 2: api.perrors.LogicReason
}
var file_perrors_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_perrors_error_proto_init() }
func file_perrors_error_proto_init() {
	if File_perrors_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_perrors_error_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_perrors_error_proto_goTypes,
		DependencyIndexes: file_perrors_error_proto_depIdxs,
		EnumInfos:         file_perrors_error_proto_enumTypes,
	}.Build()
	File_perrors_error_proto = out.File
	file_perrors_error_proto_rawDesc = nil
	file_perrors_error_proto_goTypes = nil
	file_perrors_error_proto_depIdxs = nil
}
