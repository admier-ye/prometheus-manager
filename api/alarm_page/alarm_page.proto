syntax = "proto3";

package api.alarm_page;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "base.proto";
import "prom_model.proto";

option go_package = "prometheus-manager/api/alarm_page;alarm_page";
option java_multiple_files = true;
option java_package = "api.alarm_page";

// AlarmPage 告警页面管理模块
service AlarmPage {
	// CreateAlarmPage 创建告警页面
	rpc CreateAlarmPage (CreateAlarmPageRequest) returns (CreateAlarmPageReply) {
		option (google.api.http) = {
			post: "/api/v1/alarm_page/create"
			body: "*"
		};
	}

	// UpdateAlarmPage 更新告警页面
	rpc UpdateAlarmPage (UpdateAlarmPageRequest) returns (UpdateAlarmPageReply) {
		option (google.api.http) = {
			post: "/api/v1/alarm_page/update/{id}"
			body: "*"
		};
	}

	// BatchUpdateAlarmPageStatus 批量更新告警页面状态
	rpc BatchUpdateAlarmPageStatus (BatchUpdateAlarmPageStatusRequest) returns (BatchUpdateAlarmPageStatusReply) {
		option (google.api.http) = {
			post: "/api/v1/alarm_page/status/batch/update"
			body: "*"
		};
	}

	// DeleteAlarmPage 删除告警页面
	rpc DeleteAlarmPage (DeleteAlarmPageRequest) returns (DeleteAlarmPageReply) {
		option (google.api.http) = {
			post: "/api/v1/alarm_page/delete/{id}"
			body: "*"
		};
	}

	// BatchDeleteAlarmPage 批量删除告警页面
	rpc BatchDeleteAlarmPage (BatchDeleteAlarmPageRequest) returns (BatchDeleteAlarmPageReply) {
		option (google.api.http) = {
			post: "/api/v1/alarm_page/batch/delete"
			body: "*"
		};
	}

	// GetAlarmPage 获取告警页面
	rpc GetAlarmPage (GetAlarmPageRequest) returns (GetAlarmPageReply) {
		option (google.api.http) = {
			post: "/api/v1/alarm_page/get/{id}"
			body: "*"
		};
	}

	// ListAlarmPage 获取告警页面列表
	rpc ListAlarmPage (ListAlarmPageRequest) returns (ListAlarmPageReply) {
		option (google.api.http) = {
			post: "/api/v1/alarm_page/list"
			body: "*"
		};
	}
}

// CreateAlarmPageRequest 创建告警页面请求
message CreateAlarmPageRequest {
	// name 告警页面名称(字符串长度1-20)
	string name = 1 [(validate.rules).string = {min_len: 1, max_len: 20}];
	// category 告警页面图标(字符串长度0-2048)
	string icon = 2 [(validate.rules).string = {max_len: 2048}];
	// color 告警页面颜色(字符串长度0-10)
	string color = 3 [(validate.rules).string = {max_len: 10}];
	// remark 告警页面备注(字符串长度0-200)
	string remark = 4 [(validate.rules).string = {max_len: 200}];
}
// CreateAlarmPageReply 创建告警页面响应
message CreateAlarmPageReply {
	// id 告警页面ID
	uint32 id = 1;
}

// UpdateAlarmPageRequest 更新告警页面请求
message UpdateAlarmPageRequest {
	// id 告警页面ID(大于0)
	uint32 id = 1 [(validate.rules).uint32.gt = 0];
	// name 告警页面名称(字符串长度1-20)
	string name = 2 [(validate.rules).string = {min_len: 1, max_len: 20}];
	// category 告警页面图标(字符串长度0-2048)
	string icon = 3 [(validate.rules).string = {max_len: 2048}];
	// color 告警页面颜色(字符串长度0-10)
	string color = 4 [(validate.rules).string = {max_len: 10}];
	// remark 告警页面备注(字符串长度0-200)
	string remark = 5 [(validate.rules).string = {max_len: 200}];
}
// UpdateAlarmPageReply 更新告警页面响应
message UpdateAlarmPageReply {
	// id 告警页面ID
	uint32 id = 1;
}

// BatchUpdateAlarmPageStatusRequest 批量更新告警页面状态请求
message BatchUpdateAlarmPageStatusRequest {
	// ids 告警页面ID列表(大于0)
	repeated uint32 ids = 1 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.unique = true];
	// status 告警页面状态
	Status status = 2 [(validate.rules).enum = {defined_only: true, not_in: [0]}];
}
// BatchUpdateAlarmPageStatusReply 批量更新告警页面状态响应
message BatchUpdateAlarmPageStatusReply {
	// ids 告警页面ID列表
	repeated uint32 ids = 1;
}

// DeleteAlarmPageRequest 删除告警页面请求
message DeleteAlarmPageRequest {
	// id 告警页面ID(大于0)
	uint32 id = 1 [(validate.rules).uint32.gt = 0];
}
// DeleteAlarmPageReply 删除告警页面响应
message DeleteAlarmPageReply {
	// id 告警页面ID
	uint32 id = 1;
}

// BatchDeleteAlarmPageRequest 批量删除告警页面请求
message BatchDeleteAlarmPageRequest {
	// ids 告警页面ID列表(大于0)
	repeated uint32 ids = 1 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.unique = true];
}
// BatchDeleteAlarmPageReply 批量删除告警页面响应
message BatchDeleteAlarmPageReply {
	// ids 告警页面ID列表
	repeated uint32 ids = 1;
}

// GetAlarmPageRequest 获取告警页面请求
message GetAlarmPageRequest {
	// id 告警页面ID(大于0)
	uint32 id = 1 [(validate.rules).uint32.gt = 0];
}
// GetAlarmPageReply 获取告警页面响应
message GetAlarmPageReply {
	AlarmPageV1 alarmPage = 1;
}

// ListAlarmPageRequest 获取告警页面列表请求
message ListAlarmPageRequest {
	// page 分页参数
	PageRequest page = 1 [(validate.rules).message.required = true];
	// keyword 关键字(字符串长度0-20)
	string keyword = 2 [(validate.rules).string = {max_len: 20}];
	// status 告警页面状态
	Status status = 3 [(validate.rules).enum = {defined_only: true}];
}
// ListAlarmPageReply 获取告警页面列表响应
message ListAlarmPageReply {
	// page 分页参数
	PageReply page = 1;
	// list 告警页面列表
	repeated AlarmPageV1 list = 2;
}