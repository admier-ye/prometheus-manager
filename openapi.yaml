# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
  /helloworld/{name}:
    get:
      tags:
        - Greeter
      description: Sends a greeting
      operationId: Greeter_SayHello
      parameters:
        - name: name
          in: path
          required: true
          schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /load/v1/reload:
        post:
            tags:
                - Load
            operationId: Load_Reload
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.strategy.v1.load.ReloadRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.load.ReloadReply'
    /ping:
        get:
            tags:
                - Ping
            operationId: Ping_Check
            parameters:
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
              "200":
                description: OK
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/api.PingReply'
  /prom/v1/group:
    post:
      tags:
        - Prom
      description: Group 规则组
      operationId: Prom_CreateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.prom.v1.CreateGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.CreateGroupReply'
  /prom/v1/group/{id}:
    get:
      tags:
        - Prom
      operationId: Prom_GetGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.GetGroupReply'
    put:
      tags:
        - Prom
      operationId: Prom_UpdateGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.prom.v1.UpdateGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.UpdateGroupReply'
    delete:
      tags:
        - Prom
      operationId: Prom_DeleteGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.DeleteGroupReply'
  /prom/v1/groups:
    post:
      tags:
        - Prom
      operationId: Prom_ListGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.prom.v1.ListGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.ListGroupReply'
  /prom/v1/strategies:
    post:
      tags:
        - Prom
      operationId: Prom_ListStrategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.prom.v1.ListStrategyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.ListStrategyReply'
  /prom/v1/strategy:
    post:
      tags:
        - Prom
      description: Strategy 规则策略
      operationId: Prom_CreateStrategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.prom.v1.CreateStrategyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.CreateStrategyReply'
  /prom/v1/strategy/{id}:
    get:
      tags:
        - Prom
      operationId: Prom_GetStrategy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.GetStrategyReply'
    put:
      tags:
        - Prom
      operationId: Prom_UpdateStrategy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.prom.v1.UpdateStrategyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.UpdateStrategyReply'
    delete:
      tags:
        - Prom
      operationId: Prom_DeleteStrategy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.prom.v1.DeleteStrategyReply'
    /pull/v1/strategies:
        get:
            tags:
                - Pull
            operationId: Pull_Strategies
            parameters:
                - name: node
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.pull.StrategiesReply'
    /push/v1/node/{name}/strategies:
        get:
            tags:
                - Push
            operationId: Push_Call
            parameters:
                - name: name
                  in: path
                  description: The name of the node to call.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.node.CallResponse'
    /push/v1/strategies:
        post:
            tags:
                - Push
            operationId: Push_Strategies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.strategy.v1.push.StrategiesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.push.StrategiesReply'
    /rule/v1/add:
        post:
            tags:
                - Crud
            operationId: Crud_CreateRule
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.strategy.v1.CreateRuleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.CreateRuleReply'
    /rule/v1/delete/{id}:
        delete:
            tags:
                - Crud
            operationId: Crud_DeleteRule
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.DeleteRuleReply'
    /rule/v1/detail/{id}:
        get:
            tags:
                - Crud
            operationId: Crud_RuleDetail
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.GetRuleDetailReply'
    /rule/v1/edit/{id}:
        put:
            tags:
                - Crud
            operationId: Crud_UpdateRule
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.strategy.v1.UpdateRuleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.UpdateRuleReply'
    /strategies/v1/{nodeId}:
        get:
            tags:
                - Crud
            operationId: Crud_Strategies
            parameters:
                - name: nodeId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.strategy.v1.StrategiesReply'
components:
  schemas:
    api.Field:
      type: object
      properties:
        field:
          type: string
        label:
          type: string
    api.ListQuery:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/api.PageRequest'
        sort:
          type: array
          items:
            $ref: '#/components/schemas/api.Sort'
        fields:
          type: array
          items:
            type: string
        keyword:
          type: string
        startAt:
          type: integer
          format: int64
        endAt:
          type: integer
          format: int64
        timeField:
          type: string
    api.ListQueryResult:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/api.PageReply'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/api.Field'
    api.PageReply:
      type: object
      properties:
        current:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
    api.PageRequest:
      type: object
      properties:
        current:
          type: integer
          format: int32
        size:
          type: integer
                    format: int32
        api.PingReply:
            type: object
            properties:
                name:
                    type: string
                version:
                    type: string
                namespace:
                    type: string
                metadata:
                    type: object
                    additionalProperties:
                      type: string
    api.Response:
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
    api.Sort:
      type: object
      properties:
        field:
          type: string
        asc:
          type: boolean
    api.node.CallResponse:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
    api.prom.AlarmPage:
      type: object
      properties:
        name:
          type: string
        remark:
          type: string
        icon:
          type: string
        color:
          type: string
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        id:
          type: integer
          format: int32
    api.prom.DictItem:
      type: object
      properties:
        name:
          type: string
        remark:
          type: string
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        category:
          type: integer
          format: enum
        color:
          type: string
        id:
          type: integer
          format: int32
    api.prom.GroupItem:
      type: object
      properties:
        name:
          type: string
        remark:
          type: string
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        promStrategies:
          type: array
          items:
            $ref: '#/components/schemas/api.prom.StrategyItem'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api.prom.DictItem'
        strategyCount:
          type: integer
          format: int64
        categoriesIds:
          type: array
          items:
            type: integer
            format: int32
          description: 规则组类型
        status:
          type: integer
          description: 状态
          format: enum
        id:
          type: integer
          format: int32
    api.prom.StrategyItem:
      type: object
      properties:
        groupId:
          type: integer
          format: int32
        alert:
          type: string
        expr:
          type: string
        for:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api.prom.DictItem'
          description: 规则类型
        alertLevelId:
          type: integer
          description: 默认要具备告警等级
          format: int32
        alertLevel:
          $ref: '#/components/schemas/api.prom.DictItem'
        alarmPageIds:
          type: array
          items:
            type: integer
            format: int32
          description: 规则报警页面(告警信息出现的大盘页面)
        alarmPages:
          type: array
          items:
            $ref: '#/components/schemas/api.prom.AlarmPage'
        status:
          type: integer
          description: 状态
          format: enum
        id:
          type: integer
          format: int32
    api.prom.v1.CreateGroupReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
    api.prom.v1.CreateGroupRequest:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/api.prom.GroupItem'
    api.prom.v1.CreateStrategyReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
    api.prom.v1.CreateStrategyRequest:
      type: object
      properties:
        strategy:
          $ref: '#/components/schemas/api.prom.StrategyItem'
    api.prom.v1.DeleteGroupReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
    api.prom.v1.DeleteStrategyReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
    api.prom.v1.GetGroupReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
        group:
          $ref: '#/components/schemas/api.prom.GroupItem'
    api.prom.v1.GetStrategyReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
        strategy:
          $ref: '#/components/schemas/api.prom.StrategyItem'
    api.prom.v1.ListGroupReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
        result:
          $ref: '#/components/schemas/api.ListQueryResult'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/api.prom.GroupItem'
    api.prom.v1.ListGroupRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/api.ListQuery'
        group:
          $ref: '#/components/schemas/api.prom.GroupItem'
    api.prom.v1.ListStrategyReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
        result:
          $ref: '#/components/schemas/api.ListQueryResult'
        strategies:
          type: array
          items:
            $ref: '#/components/schemas/api.prom.StrategyItem'
    api.prom.v1.ListStrategyRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/api.ListQuery'
        strategy:
          $ref: '#/components/schemas/api.prom.StrategyItem'
    api.prom.v1.UpdateGroupReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
    api.prom.v1.UpdateGroupRequest:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/api.prom.GroupItem'
        id:
          type: integer
          format: int32
    api.prom.v1.UpdateStrategyReply:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/api.Response'
    api.prom.v1.UpdateStrategyRequest:
      type: object
      properties:
        strategy:
          $ref: '#/components/schemas/api.prom.StrategyItem'
        id:
          type: integer
          format: int32
    api.strategy.Group:
      type: object
      properties:
        name:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/api.strategy.Rule'
    api.strategy.Rule:
            type: object
            properties:
                alert:
                    type: string
                expr:
                    type: string
                for:
                    type: string
                labels:
                    type: object
                    additionalProperties:
                        type: string
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        api.strategy.Strategy:
            type: object
            properties:
                filename:
                    type: string
                groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.strategy.Group'
        api.strategy.StrategyDir:
            type: object
            properties:
                dir:
                    type: string
                strategies:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.strategy.Strategy'
        api.strategy.v1.CreateRuleReply:
            type: object
            properties:
                response:
                    $ref: '#/components/schemas/api.Response'
        api.strategy.v1.CreateRuleRequest:
            type: object
            properties:
                rule:
                    $ref: '#/components/schemas/api.strategy.Rule'
                groupId:
                    type: integer
                    format: uint32
        api.strategy.v1.DeleteRuleReply:
            type: object
            properties:
                response:
                    $ref: '#/components/schemas/api.Response'
        api.strategy.v1.GetRuleDetailReply:
            type: object
            properties:
                response:
                    $ref: '#/components/schemas/api.Response'
                rule:
                    $ref: '#/components/schemas/api.strategy.Rule'
        api.strategy.v1.StrategiesReply:
            type: object
            properties:
                response:
                    $ref: '#/components/schemas/api.Response'
                strategyDir:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.strategy.StrategyDir'
        api.strategy.v1.UpdateRuleReply:
            type: object
            properties:
                response:
                    $ref: '#/components/schemas/api.Response'
        api.strategy.v1.UpdateRuleRequest:
            type: object
            properties:
                id:
                    type: string
                rule:
                    $ref: '#/components/schemas/api.strategy.Rule'
        api.strategy.v1.load.ReloadReply:
            type: object
            properties:
                response:
                    $ref: '#/components/schemas/api.Response'
                timestamp:
                    type: integer
                    format: int64
        api.strategy.v1.load.ReloadRequest:
            type: object
            properties:
                nodes:
                    type: array
                    items:
                        type: string
        api.strategy.v1.pull.StrategiesReply:
            type: object
            properties:
                strategyDirs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.strategy.StrategyDir'
                timestamp:
                    type: integer
                    format: int64
        api.strategy.v1.push.Result:
            type: object
            properties:
                successCount:
                    type: integer
                    description: 成功数量
                    format: int64
                failedCount:
                    type: integer
                    description: 失败数量
                    format: int64
                strategyDirs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.strategy.StrategyDir'
                    description: 失败列表
        api.strategy.v1.push.StrategiesReply:
            type: object
            properties:
                response:
                    $ref: '#/components/schemas/api.Response'
                timestamp:
                    type: integer
                    description: 响应时间
                    format: int64
                result:
                    $ref: '#/components/schemas/api.strategy.v1.push.Result'
        api.strategy.v1.push.StrategiesRequest:
            type: object
            properties:
                node:
                    type: array
                    items:
                        type: string
                    description: 目标节点
                strategyDirs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.strategy.StrategyDir'
                    description: 策略
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
  - name: Crud
    - name: Greeter
      description: The greeting service definition.
    - name: Load
    - name: Ping
  - name: Prom
    - name: Pull
    - name: Push
    - name: Push
